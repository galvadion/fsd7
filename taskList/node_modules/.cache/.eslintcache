[{"/Users/diegobecco/Documents/senpai/fsd7/taskList/src/index.js":"1","/Users/diegobecco/Documents/senpai/fsd7/taskList/src/App.js":"2","/Users/diegobecco/Documents/senpai/fsd7/taskList/src/reportWebVitals.js":"3","/Users/diegobecco/Documents/senpai/fsd7/taskList/src/components/AddTask.jsx":"4","/Users/diegobecco/Documents/senpai/fsd7/taskList/src/components/TaskList.jsx":"5"},{"size":507,"mtime":1643237407897,"results":"6","hashOfConfig":"7"},{"size":1494,"mtime":1644275148936,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1643063799693,"results":"9","hashOfConfig":"7"},{"size":1359,"mtime":1644275318273,"results":"10","hashOfConfig":"7"},{"size":441,"mtime":1644274450132,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dcvrnt",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"/Users/diegobecco/Documents/senpai/fsd7/taskList/src/index.js",[],"/Users/diegobecco/Documents/senpai/fsd7/taskList/src/App.js",["25"],"import logo from './logo.svg';\nimport './assets/App.css';\nimport { useEffect, useState } from 'react';\nimport TaskList from './components/TaskList';\nimport AddTask from './components/AddTask';\nimport PacmanLoader from 'react-spinners/PacmanLoader'\n\nfunction App() {\n\n  /* Declaración de una variable de estado \n     taskList, con su asignador y el valor por defecto vacio */\n  const [taskList,setTaskList] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [hasAnError, setHasError] = useState(false)\n\n\n  function addTask(task){\n    // descomprimo task, y le agrego una nueva propiedad llamada id. {...task,id:sequencer}\n    \n    setTaskList(taskList.concat(task))\n  }\n\n  useEffect(()=>{\n    fetch(\"http://localhost:4000/tareas\")\n      .then((data) => data.json())\n      .then(data =>{\n        setTaskList(data)\n        setLoading(false)\n      })\n      .catch(e=>{\n        console.log(\"Hubo un error\")\n        setHasError(true)\n        setLoading(false)\n      })\n  },[])\n\n  return (\n    <main>\n      <h1>Lista de tareas!</h1>\n\n      <AddTask addTask={addTask} taskListLength={taskList.length}/>\n\n      <h3>Tareas</h3>\n      <PacmanLoader loading={loading} ></PacmanLoader>\n      <TaskList taskList={taskList} />\n      {\n        hasAnError && \n        (\n          \"Ha ocurrido un error\"\n        )\n      }\n      <p>\n        Para agregar tareas vamos a tener que hablar de eventos, el DOM y cómo\n        interactuar con él\n      </p>\n    </main>\n  );\n}\n\n\nexport default App;\n",["26","27"],"/Users/diegobecco/Documents/senpai/fsd7/taskList/src/reportWebVitals.js",[],"/Users/diegobecco/Documents/senpai/fsd7/taskList/src/components/AddTask.jsx",["28"],"import React from 'react';\nimport { useState, useEffect } from 'react';\n\n\nconst AddTask = (props) => {  // {task, priority}\n\n    const [taskName,setTaskName] = useState('Pepito')\n    const [priority,setPriority] = useState('')\n\n    const [sequencer, setSequencer] = useState(props.taskListLength+1)\n\n    useEffect(() => {\n      setTaskName('')\n      setPriority('')\n    },\n    [sequencer])\n\n  \n    const addTask = () => {\n      props.addTask({priority: priority, text: taskName, id: sequencer})\n      setSequencer(sequencer+1)\n    }\n  \n    return (\n    <form action=\"javascript:void(0);\">\n          <input\n            id=\"tarea\"\n            type=\"text\"\n            value={taskName}\n            name=\"tarea\"\n            onChange={(event) => setTaskName(event.target.value)}\n            placeholder=\"Descripción de la tarea\"\n          />\n          <select name=\"prioridad\" id=\"prioridad\"\n            value={priority} \n            onChange={e=> setPriority(e.target.value) }>\n              <option value=\"\" disabled selected>Prioridad</option>\n              <option value=\"prioridad-baja\">baja</option>\n              <option value=\"prioridad-media\">media</option>\n              <option value=\"prioridad-alta\">alta</option>\n          </select>\n          <button id=\"agregar\" onClick={addTask}>Agregar!</button>\n        </form>\n    )\n  }\n  export default AddTask;","/Users/diegobecco/Documents/senpai/fsd7/taskList/src/components/TaskList.jsx",[],{"ruleId":"29","severity":1,"message":"30","line":1,"column":8,"nodeType":"31","messageId":"32","endLine":1,"endColumn":12},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":25,"column":18,"nodeType":"39","messageId":"40","endLine":25,"endColumn":39},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["41"],"no-negated-in-lhs",["42"],"no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","no-global-assign","no-unsafe-negation"]